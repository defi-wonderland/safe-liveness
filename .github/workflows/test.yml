name: Tests

on: [push]

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  forge:
    name: Run Unit and E2E Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn --frozen-lockfile --network-concurrency 1

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' # install the python version needed

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Precompile using 0.8.19 and via-ir=false
        run: yarn build

      - name: "Create env file"
        run: |
          touch .env
          echo MAINNET_RPC="${{ secrets.MAINNET_RPC }}" >> .env
          echo MAINNET_E2E_RPC="${{ secrets.MAINNET_E2E_RPC }}" >> .env
          echo SEARCHER_PK="${{ secrets.SEARCHER_PK }}" >> .env
          echo MAINNET_DEPLOYER_PK="${{ secrets.MAINNET_DEPLOYER_PK }}" >> .env
          cat .env

      - name: Run tests
        run: yarn test:e2e-workflow

  forge-optimized:
    name: Run Optimized Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - name: Install dependencies
        run: yarn --frozen-lockfile --network-concurrency 1

      - name: Precompile using 0.8.14 and via-ir=true
        run: yarn build:optimized

      - name: Run tests
        run: yarn test:unit
  # coverage:
  #   name: Run Coverage Tests
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.x]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: "yarn"
  #     - run: yarn install
  #     - run: yarn build
  #     - run: yarn coverage
  #     - uses: codecov/codecov-action@v3
  #       with:
  #         files: ./coverage/lcov.info
  #         flags: production
